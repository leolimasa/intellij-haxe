<!--
  ~ Copyright 2000-2013 JetBrains s.r.o.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<idea-plugin version="2">
  <id>com.intellij.plugins.haxe</id>
  <name>Haxe Support</name>
  <description>Support for Haxe programming language</description>
  <change-notes>
    <![CDATA[
      <p>0.6.9:</p>
      <ul>
        <li>Neko target for OpenFL</li>
        <li>Bug fixes</li>
      </ul>
      <p>0.6.5:</p>
      <ul>
        <li>OpenFL support</li>
      </ul>
      <p>0.6.4:</p>
      <ul>
        <li>Optimize imports</li>
      </ul>
      <p>0.6.3:</p>
      <ul>
        <li>Parser improvements</li>
      </ul>
      <p>0.6.2:</p>
      <ul>
        <li>Bug fixes</li>
      </ul>
      <p>0.6.1:</p>
      <ul>
        <li>Haxe 3 support</li>
      </ul>
      <p>0.6:</p>
      <ul>
        <li>Folding</li>
      </ul>
      <p>0.5.8:</p>
      <ul>
        <li>Bug fixes</li>
      </ul>
      <p>0.5.6:</p>
      <ul>
        <li>NME support improvements</li>
        <li>HXCPP debugger improvements</li>
      </ul>
      <p>0.5.5:</p>
      <ul>
        <li>Bug fixes</li>
      </ul>
      <p>0.5.4:</p>
      <ul>
        <li>New Compiler Mode</li>
      </ul>
      <p>0.5.2:</p>
      <ul>
        <li>Bug fixes</li>
      </ul>
      <p>0.5.1:</p>
      <ul>
        <li>Bug fixes</li>
      </ul>
      <p>0.5:</p>
      <ul>
        <li>HXCPP Debugging</li>
        <li>Bug fixes</li>
      </ul>
      <p>0.4.7:</p>
      <ul>
        <li>Introduce Variable Refactoring</li>
        <li>Using Completion</li>
        <li>Bug fixes</li>
      </ul>
      <p>0.4.6:</p>
      <ul>
        <li>Conditional Compilation Support</li>
        <li>Bug fixes</li>
      </ul>
      <p>0.4.5:</p>
      <ul>
        <li>Live Templates</li>
        <li>Surround With Action</li>
        <li>Smart completion</li>
        <li>Goto Test Action</li>
      </ul>
      <p>0.4.4:</p>
      <ul>
        <li>Bug fixes</li>
        <li>EReg support</li>
      </ul>
      <p>0.4.3:</p>
      <ul>
        <li>Bug fixes</li>
        <li>Structure view</li>
      </ul>
      <p>0.4.1:</p>
      <ul>
        <li>Bug fixes</li>
        <li>Unresolved type inspection</li>
      </ul>
      <p>0.4:</p>
      <ul>
        <li>NME Support</li>
        <li>Override/Implement method action</li>
        <li>Generate getter/setter action</li>
        <li>Parameter info action</li>
      </ul>
      <p>0.3:</p>
      <ul>
        <li>Type resolving improvements</li>
        <li>Goto Implementation(s) action</li>
        <li>Goto Super Method action</li>
        <li>Move refactoring</li>
      </ul>
      <p>0.2.3:</p>
      <ul>
        <li>Completion fixes</li>
      </ul>
      <p>0.2.2:</p>
      <ul>
        <li>Type resolving improvements</li>
        <li>Rename refactoring</li>
        <li>NMML scheme</li>
        <li>HXML support</li>
      </ul>
      <p>0.2.1:</p>
      <ul>
        <li>Type resolving improvements</li>
        <li>Documentation support</li>
        <li>New color settings</li>
      </ul>
      <p>0.2:</p>
      <ul>
        <li>Jump to declaration of local, std symbol or class</li>
        <li>Reference completion</li>
        <li>Class completion</li>
        <li>Color settings</li>
        <li>Code formatter</li>
        <li>Go to Class</li>
        <li>Icons for Haxe files</li>
        <li>Search for usages</li>
        <li>Highlight symbol occurencies</li>
        <li>Debugger for Flash target ("Flash/Flex Support" plugin required)</li>
      </ul>
      <p>0.1:</p>
      <ul>
        <li>Haxe module and SDK</li>
        <li>Parsing Haxe files</li>
        <li>Keyword completion</li>
        <li>Compile Haxe files and run in Neko VM</li>
      </ul>
      ]]>
  </change-notes>
  <version>0.6.9</version>
  <vendor>JetBrains</vendor>
  <idea-version since-build="132.1"/>
  <depends>com.intellij.modules.java</depends><!-- Rich platform which contains compiler abstraction -->
  <depends optional="true" config-file="debugger-support.xml">com.intellij.modules.ultimate</depends>

  <application-components>
    <!-- Add your application components here -->
  </application-components>
  <extensionPoints>
    <extensionPoint name="module.config" interface="com.intellij.plugins.haxe.ide.projectStructure.HaxeModuleConfigurationExtensionPoint"/>
  </extensionPoints>
  <extensions defaultExtensionNs="com.intellij">
    <compileServer.plugin classpath="haxe-jps-plugin.jar;haxe-common.jar"/>
    <errorHandler implementation="com.intellij.diagnostic.ITNReporter"/>
    <testFinder implementation="com.intellij.plugins.haxe.ide.HaxeTestFinder"/>

    <iconProvider implementation="com.intellij.plugins.haxe.ide.HaxeIconProvider"/>
    <qualifiedNameProvider implementation="com.intellij.plugins.haxe.ide.HaxeQualifiedNameProvider"/>

    <sdkType implementation="com.intellij.plugins.haxe.config.sdk.HaxeSdkType"/>
    <compiler implementation="com.intellij.plugins.haxe.compilation.HaxeCompiler"/>
    <moduleType id="HAXE_MODULE" implementationClass="com.intellij.plugins.haxe.ide.module.HaxeModuleType"/>
    <moduleConfigurationEditorProvider
        implementation="com.intellij.plugins.haxe.ide.projectStructure.HaxeModuleConfigurationEditorProvider"/>
    <projectStructureDetector implementation="com.intellij.plugins.haxe.ide.projectStructure.detection.HaxeProjectStructureDetector"/>

    <library.type implementation="com.intellij.plugins.haxe.ide.library.HaxeLibraryType"/>

    <fileTypeFactory implementation="com.intellij.plugins.haxe.HaxeFileTypeLoader"/>
    <fileTypeFactory implementation="com.intellij.plugins.haxe.nmml.NMMLFileTypeFactory"/>
    <xml.schemaProvider implementation="com.intellij.plugins.haxe.nmml.NMMLSchemaProvider"/>

    <programRunner implementation="com.intellij.plugins.haxe.runner.HaxeRunner"/>

    <lang.parserDefinition language="Haxe" implementationClass="com.intellij.plugins.haxe.lang.parser.HaxeParserDefinition"/>
    <lang.formatter language="Haxe" implementationClass="com.intellij.plugins.haxe.ide.formatter.HaxeFormattingModelBuilder"/>
    <lang.syntaxHighlighterFactory key="Haxe" implementationClass="com.intellij.plugins.haxe.ide.highlight.HaxeSyntaxHighlighterFactory"/>

    <lang.braceMatcher language="Haxe" implementationClass="com.intellij.plugins.haxe.ide.HaxeBraceMatcher"/>
    <typedHandler implementation="com.intellij.plugins.haxe.ide.editor.HaxeTypedHandler" id="haxe"/>

    <lang.findUsagesProvider language="Haxe" implementationClass="com.intellij.plugins.haxe.ide.HaxeFindUsagesProvider"/>
    <lang.implementationTextSelectioner language="Haxe"
                                        implementationClass="com.intellij.plugins.haxe.ide.HaxeImplementationTextSelectioner"/>
    <lang.documentationProvider language="Haxe" implementationClass="com.intellij.plugins.haxe.ide.HaxeDocumentationProvider"/>
    <lang.commenter language="Haxe" implementationClass="com.intellij.plugins.haxe.ide.HaxeCommenter"/>
    <lang.psiStructureViewFactory language="Haxe" implementationClass="com.intellij.plugins.haxe.ide.structure.HaxeStructureViewFactory"/>
    <lang.surroundDescriptor language="Haxe" implementationClass="com.intellij.plugins.haxe.ide.surroundWith.HaxeSurroundDescriptor"/>
    <lang.refactoringSupport language="Haxe"
                             implementationClass="com.intellij.plugins.haxe.ide.refactoring.HaxeRefactoringSupportProvider"/>
    <lang.foldingBuilder language="Haxe" implementationClass="com.intellij.plugins.haxe.ide.folding.HaxeFoldingBuilder"/>
    <lang.importOptimizer language="Haxe" implementationClass="com.intellij.plugins.haxe.ide.HaxeImportOptimizer"/>

    <languageInjector implementation="com.intellij.plugins.haxe.lang.RegexLanguageInjector"/>
    <lang.elementManipulator forClass="com.intellij.plugins.haxe.lang.psi.HaxeRegularExpressionLiteral"
                             implementationClass="com.intellij.plugins.haxe.lang.psi.manipulators.HaxeRegularExpressionLiteralManipulator"/>

    <moveFileHandler implementation="com.intellij.plugins.haxe.ide.refactoring.move.HaxeFileMoveHandler"/>

    <codeInsight.lineMarkerProvider language="Haxe" implementationClass="com.intellij.plugins.haxe.ide.HaxeLineMarkerProvider"/>
    <codeInsight.gotoSuper language="Haxe" implementationClass="com.intellij.plugins.haxe.ide.HaxeGotoSuperHandler"/>

    <codeInsight.overrideMethod language="Haxe"
                                implementationClass="com.intellij.plugins.haxe.ide.generation.HaxeOverrideMethodHandler"/>
    <codeInsight.implementMethod language="Haxe"
                                 implementationClass="com.intellij.plugins.haxe.ide.generation.HaxeImplementMethodHandler"/>
    <codeInsight.parameterInfo language="Haxe"
                               implementationClass="com.intellij.plugins.haxe.ide.info.HaxeParameterInfoHandler"/>

    <colorSettingsPage implementation="com.intellij.plugins.haxe.ide.highlight.HaxeColorSettingsPage"/>
    <additionalTextAttributes scheme="Default" file="colorSchemes/HaxeDefault.xml"/>
    <additionalTextAttributes scheme="Darcula" file="colorSchemes/HaxeDefault.xml"/>

    <codeStyleSettingsProvider implementation="com.intellij.plugins.haxe.ide.formatter.settings.HaxeCodeStyleSettingsProvider"/>
    <langCodeStyleSettingsProvider implementation="com.intellij.plugins.haxe.ide.formatter.settings.HaxeLanguageCodeStyleSettingsProvider"/>

    <quoteHandler fileType="Haxe" className="com.intellij.plugins.haxe.ide.HaxeQuoteHandler"/>

    <completion.contributor language="any" implementationClass="com.intellij.plugins.haxe.ide.HaxeKeywordCompletionContributor"/>
    <completion.contributor language="Haxe" implementationClass="com.intellij.plugins.haxe.ide.HaxeClassNameCompletionContributor"/>
    <completion.contributor language="Haxe" implementationClass="com.intellij.plugins.haxe.ide.HaxeSmartCompletionContributor"/>

    <configurationType implementation="com.intellij.plugins.haxe.runner.HaxeRunConfigurationType"/>
    <configurationType implementation="com.intellij.plugins.haxe.runner.debugger.hxcpp.HXCPPRemoteRunConfigurationType"/>

    <moduleService serviceInterface="com.intellij.plugins.haxe.ide.module.HaxeModuleSettings"
                   serviceImplementation="com.intellij.plugins.haxe.ide.module.HaxeModuleSettings"/>

    <internalFileTemplate name="Haxe Class"/>
    <internalFileTemplate name="Haxe Interface"/>
    <internalFileTemplate name="Haxe Enum"/>
    <internalFileTemplate name="NMML Project File"/>

    <liveTemplateMacro implementation="com.intellij.plugins.haxe.ide.template.macro.HaxeArrayVariableMacro"/>
    <liveTemplateMacro implementation="com.intellij.plugins.haxe.ide.template.macro.HaxeSuggestIndexNameMacro"/>
    <liveTemplateMacro implementation="com.intellij.plugins.haxe.ide.template.macro.HaxeSuggestVariableNameMacro"/>

    <liveTemplateContext implementation="com.intellij.plugins.haxe.ide.template.HaxeTemplateContextType"/>
    <defaultLiveTemplatesProvider implementation="com.intellij.plugins.haxe.ide.template.HaxeDefaultLiveTemplatesProvider"/>

    <fileBasedIndex implementation="com.intellij.plugins.haxe.ide.index.HaxeComponentIndex"/>
    <fileBasedIndex implementation="com.intellij.plugins.haxe.ide.index.HaxeInheritanceIndex"/>
    <fileBasedIndex implementation="com.intellij.plugins.haxe.ide.index.HaxeTypeDefInheritanceIndex"/>
    <fileBasedIndex implementation="com.intellij.plugins.haxe.ide.index.HaxeComponentFileNameIndex"/>
    <gotoClassContributor implementation="com.intellij.plugins.haxe.ide.HaxeClassContributor"/>

    <definitionsSearch implementation="com.intellij.plugins.haxe.ide.index.HaxeInheritanceDefinitionsSearchExecutor"/>

    <projectService serviceInterface="com.intellij.plugins.haxe.config.HaxeProjectSettings"
                    serviceImplementation="com.intellij.plugins.haxe.config.HaxeProjectSettings"/>
    <projectService serviceInterface="com.intellij.plugins.haxe.lang.psi.HaxeClassResolveCache"
                    serviceImplementation="com.intellij.plugins.haxe.lang.psi.HaxeClassResolveCache"/>
    <projectConfigurable instance="com.intellij.plugins.haxe.config.HaxeSettingsConfigurable" id="haxe.settings" key="haxe.settings.name"
                         bundle="com.intellij.plugins.haxe.HaxeBundle" nonDefaultProject="true"/>

    <annotator language="Haxe" implementationClass="com.intellij.plugins.haxe.ide.annotator.HaxeColorAnnotator"/>
    <annotator language="Haxe" implementationClass="com.intellij.plugins.haxe.ide.annotator.HaxeTypeAnnotator"/>

    <localInspection language="XML" shortName="NMEBuildDirectory" bundle="com.intellij.plugins.haxe.HaxeBundle"
                     key="haxe.inspections.nme.build.directory" groupKey="haxe.inspections.group.name" enabledByDefault="true"
                     level="WARNING" implementationClass="com.intellij.plugins.haxe.codeInspection.NMEBuildDirectoryInspection"/>

    <localInspection language="Haxe" shortName="HaxeUnusedImport" bundle="com.intellij.plugins.haxe.HaxeBundle"
                     key="haxe.inspection.unused.import.name"
                     groupKey="inspections.group.name" enabledByDefault="true"
                     implementationClass="com.intellij.plugins.haxe.ide.inspections.HaxeUnusedImportInspection"/>

    <localInspection language="Haxe" shortName="HaxeUnresolvedSymbol" bundle="com.intellij.plugins.haxe.HaxeBundle"
                     key="haxe.inspection.unresolved.symbol"
                     groupKey="inspections.group.name" enabledByDefault="true"
                     implementationClass="com.intellij.plugins.haxe.ide.inspections.HaxeUnresolvedSymbolInspection"/>
  </extensions>

  <actions>
    <action id="Haxe.NewHaxeClass" class="com.intellij.plugins.haxe.ide.actions.CreateClassAction"
            text="Haxe Class" description="Create new Haxe class/interface/enum">
      <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
    </action>
    <action id="Haxe.NewNMMLFile" class="com.intellij.plugins.haxe.ide.actions.CreateNMMLFileAction"
            text="NMML file" description="Create new NMML file">
      <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFromTemplate"/>
    </action>
    <action id="Generate.GetAccessor.Haxe" class="com.intellij.plugins.haxe.ide.generation.HaxeGenerateGetterAction"
            text="Getter">
      <add-to-group anchor="first" group-id="GenerateGroup"/>
    </action>
    <action id="Generate.SetAccessor.Haxe" class="com.intellij.plugins.haxe.ide.generation.HaxeGenerateSetterAction"
            text="Setter">
      <add-to-group anchor="after" relative-to-action="Generate.GetAccessor.Haxe" group-id="GenerateGroup"/>
    </action>
    <action id="Generate.GetSetAccessor.Haxe" class="com.intellij.plugins.haxe.ide.generation.HaxeGenerateGetterSetterAction"
            text="Getter and Setter">
      <add-to-group anchor="after" relative-to-action="Generate.SetAccessor.Haxe" group-id="GenerateGroup"/>
    </action>
  </actions>
</idea-plugin>
